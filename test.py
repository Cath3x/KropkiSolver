from cspbase import *
import itertools
import traceback

from kropki_csp import kropki_csp_model_1, kropki_csp_model_2, KropkiBoard
from propagators import prop_FC,  prop_GAC, ord_mrv

b1 = KropkiBoard(6,[[1,6,5,4,-1,3],
       [3,2,6,1,-1,4],
       [4,5,2,3,-1,6],
       [2,1,4,6,-1,5],
       [6,3,1,5,-1,2],
       [5,4,3,2,-1,1]],
       [[0,1,1,0,1],[1,0,0,0,1],[1,0,1,0,0],[0,0,0,0,0],[0,0,0,1,0],[1,1,1,0,0]],
       [[0,1,0,0,1],[0,0,0,0,1],[1,0,0,0,0],[0,0,0,1,0],[0,0,0,1,0],[1,0,1,0,0]],
       [[0,0,0,1,0],[0,0,0,0,0],[0,0,0,0,0],[1,0,0,1,0],[1,0,0,0,1],[0,0,0,0,0]],
       [[0,0,1,0,0],[0,0,0,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,0,0,0,0],[0,0,0,0,0]])

b1sol = KropkiBoard(6,[[1,6,5,4,2,3],
       [3,2,6,1,5,4],
       [4,5,2,3,1,6],
       [2,1,4,6,3,5],
       [6,3,1,5,4,2],
       [5,4,3,2,6,1]],
       [[0,1,1,0,1],[1,0,0,0,1],[1,0,1,0,0],[0,0,0,0,0],[0,0,0,1,0],[1,1,1,0,0]],
       [[0,1,0,0,1],[0,0,0,0,1],[1,0,0,0,0],[0,0,0,1,0],[0,0,0,1,0],[1,0,1,0,0]],
       [[0,0,0,1,0],[0,0,0,0,0],[0,0,0,0,0],[1,0,0,1,0],[1,0,0,0,1],[0,0,0,0,0]],
       [[0,0,1,0,0],[0,0,0,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,0,0,0,0],[0,0,0,0,0]])

b2 = KropkiBoard(6,[[-1,-1,-1,-1,-1,-1],
       [-1,-1,-1,-1,-1,-1],
       [-1,-1,-1,-1,-1,-1],
       [-1,-1,-1,-1,-1,-1],
       [-1,-1,-1,-1,-1,-1],
       [-1,-1,-1,-1,-1,-1]],
       [[0,0,1,0,0],[0,1,0,0,0],[0,0,0,0,0],[1,0,0,1,0],[1,0,0,0,0],[1,0,1,0,0]],
       [[0,1,0,0,0],[0,0,1,1,0],[0,1,0,0,0],[0,0,0,1,0],[0,1,1,0,0],[0,0,1,0,1]],
       [[0,0,0,1,0],[1,0,0,1,0],[1,0,0,0,0],[0,0,0,0,0],[0,1,0,1,0],[0,0,0,0,0]],
       [[0,0,1,0,0],[0,0,0,0,0],[0,0,0,0,1],[1,1,0,0,1],[1,0,0,1,0],[0,0,0,0,0]])

b2sol = KropkiBoard(6,[[5,1,3,4,2,6],
       [3,6,5,2,4,1],
       [2,4,6,1,5,3],
       [4,3,1,5,6,2],
       [1,2,4,6,3,5],
       [6,5,2,3,1,4]],
       [[0,0,1,0,0],[0,1,0,0,0],[0,0,0,0,0],[1,0,0,1,0],[1,0,0,0,0],[1,0,1,0,0]],
       [[0,1,0,0,0],[0,0,1,1,0],[0,1,0,0,0],[0,0,0,1,0],[0,1,1,0,0],[0,0,1,0,1]],
       [[0,0,0,1,0],[1,0,0,1,0],[1,0,0,0,0],[0,0,0,0,0],[0,1,0,1,0],[0,0,0,0,0]],
       [[0,0,1,0,0],[0,0,0,0,0],[0,0,0,0,1],[1,1,0,0,1],[1,0,0,1,0],[0,0,0,0,0]])

def check_solution(var_array, kropki_board_soln):

    count, rcount = 0, 0
    dim = kropki_board_soln.dim
    row = kropki_board_soln.cell_values[count]
    for var in var_array:
        if int(var.get_assigned_value()) != row[rcount]: return 0
        else: rcount += 1
        if rcount == dim:
            count += 1
            if count < dim: row = kropki_board_soln.cell_values[count]
            rcount = 0

    return 1

print("Using Model 2")
csp, var_array = kropki_csp_model_2(b2)
total = 0
if csp != None:
     solver = BT(csp)
     print("=======================================================")
     print("FC")
     solver.trace_on()
     solver.bt_search(prop_FC, var_ord=ord_mrv)
     #print("Solution") #if you want to see the solution, uncomment here
     #print_kropki_soln(var_array, b.dim)
     total += check_solution(var_array, b2sol)